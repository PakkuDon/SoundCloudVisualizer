function Visualizer(graphics,analyser){var self=this;this.graphics=graphics,this.analyser=analyser,this.strategies={minimalistic:{name:"Minimalistic",obj:new MinimalisticVisualizer},waveform:{name:"Waveform",obj:new WaveformVisualizer}},this.setStrategy=function(key){self.strategy=self.strategies[key].obj,self.strategy.initialise(this.graphics,this.analyser)},this.draw=function(){self.strategy.draw(this.graphics,this.analyser)},this.setStrategy(Object.keys(self.strategies)[0])}function MinimalisticVisualizer(){var bufferLength=null,streamData=null,width=null,height=null,gridWidth=null,gridHeight=null;this.initialise=function(graphics,analyser){analyser.fftSize=256,bufferLength=analyser.frequencyBinCount,streamData=new Uint8Array(bufferLength),width=graphics.canvas.width,height=graphics.canvas.height,gridWidth=width/bufferLength,gridHeight=height/256,graphics.strokeStyle="#69C"},this.draw=function(graphics,analyser){analyser.getByteFrequencyData(streamData),graphics.clearRect(0,0,width,height);for(var i=0;bufferLength>i;i++){var value=streamData[i],barHeight=height-gridHeight*value;graphics.beginPath(),graphics.moveTo(i*gridWidth,barHeight),graphics.lineTo((i+1)*gridWidth,barHeight),graphics.stroke(),graphics.closePath()}}}function WaveformVisualizer(){var bufferLength=null,streamData=null,width=null,height=null,gridWidth=null,gridHeight=null;this.initialise=function(graphics,analyser){analyser.fftSize=2048,bufferLength=analyser.frequencyBinCount,streamData=new Uint8Array(bufferLength),width=graphics.canvas.width,height=graphics.canvas.height,gridWidth=width/bufferLength,gridHeight=height/256,graphics.strokeStyle="#69C"},this.draw=function(graphics,analyser){analyser.getByteTimeDomainData(streamData),graphics.clearRect(0,0,width,height),graphics.beginPath();for(var i=0;bufferLength>i;i++){var x=i*gridWidth,y=gridHeight*streamData[i];0==i?graphics.moveTo(x,y):graphics.lineTo(x,y)}graphics.stroke(),graphics.closePath()}}var controllers=angular.module("scvControllers",[]),services=angular.module("scvServices",["playerServices"]),playerServices=angular.module("playerServices",[]),filters=angular.module("scvFilters",["ngSanitize"]),directives=angular.module("scvDirectives",[]),app=angular.module("SoundCloudVisualizer",["scvServices","scvControllers","scvFilters","scvDirectives"]),filterModule=angular.module("scvFilters");filterModule.filter("trusted",["$sce",function($sce){return function(url){return $sce.trustAsResourceUrl(url)}}]),filterModule.filter("reverse",function(){return function(array){return array.slice().reverse()}}),angular.module("scvControllers").controller("HistoryController",["player",function(player){this.getHistory=function(){return player.getHistory().getTracks()},this.play=function(index){var track=this.getHistory()[index];player.play(track)},this["delete"]=function(index){player.getHistory().remove(index)},this.queue=function(index){var track=this.getHistory()[index];player.getPlaybackQueue().add(track)}}]),angular.module("scvControllers").controller("NotificationsController",["notifications",function(notifications){this.getNotifications=function(){return notifications.getMessages()},this["delete"]=function(index){notifications.deleteMessage(index)}}]),angular.module("scvControllers").controller("PlaybackQueueController",["player",function(player){this.getPlaybackQueue=function(){return player.getPlaybackQueue().getTracks()},this.play=function(index){var track=this.getPlaybackQueue()[index];player.getPlaybackQueue().remove(index),player.play(track)},this["delete"]=function(index){player.getPlaybackQueue().remove(index)}}]),angular.module("scvControllers").controller("PlayerController",["$scope","player",function($scope,player){this.track_url="https://soundcloud.com/dub-motion/dub-motion-awakened",this.getCurrentTrack=function(){return player.getCurrentTrack()},this.play=function(){player.playTrack(this.track_url)},this.playNext=function(){$scope.$apply(function(){player.next()})}}]),angular.module("scvControllers").controller("VisualizerController",["$scope","audio",function($scope,audio){var analyser,visualizer,self=this;this.strategy="",this.setStrategy=function(strategy){visualizer.setStrategy(strategy)},this.getStrategies=function(){return"undefined"!=typeof visualizer?visualizer.strategies:{}},$scope.$on("rendered",function(event,messages){var graphicsContext=document.querySelector("canvas").getContext("2d");analyser=audio.getAnalyser(),visualizer=new Visualizer(graphicsContext,analyser);var key=Object.keys(visualizer.strategies)[0];self.strategy=visualizer.strategies[key];var draw=function(){visualizer.draw(),requestAnimationFrame(draw)};requestAnimationFrame(draw)})}]),angular.module("scvDirectives").directive("history",function(){return{restrict:"E",templateUrl:"js/views/history.html",controller:"HistoryController",controllerAs:"histCtrl"}}),angular.module("scvDirectives").directive("notifications",function(){return{restrict:"E",templateUrl:"js/views/notifications.html",controller:"NotificationsController",controllerAs:"notificationsCtrl"}}),angular.module("scvDirectives").directive("playbackQueue",function(){return{restrict:"E",templateUrl:"js/views/playback-queue.html",controller:"PlaybackQueueController",controllerAs:"playbackCtrl"}}),angular.module("scvDirectives").directive("player",function(){return{restrict:"E",templateUrl:"js/views/player.html",controller:"PlayerController",controllerAs:"playerCtrl",link:function(scope,element,attributes){var audio=element.find("audio");audio.on("ended",function(e){scope.playerCtrl.playNext()})}}}),angular.module("scvDirectives").directive("rendered",["$rootScope","$timeout",function($rootScope,$timeout){return{restrict:"A",link:function(scope,elem,attr){$timeout(function(){$rootScope.$broadcast("rendered")})}}}]),angular.module("scvDirectives").directive("visualizer",function(){return{restrict:"E",templateUrl:"js/views/visualizer.html",controller:"VisualizerController",controllerAs:"visualizerCtrl"}}),angular.module("scvServices").factory("audio",function(){var audioCtx=new(window.AudioContext||window.webkitAudioContext),analyser=null;return{getAnalyser:function(){if(audioCtx&&null===analyser){var audioElem=document.querySelector("audio"),source=audioCtx.createMediaElementSource(audioElem);analyser=audioCtx.createAnalyser(),source.connect(analyser),analyser.connect(audioCtx.destination)}return analyser}}}),angular.module("playerServices").factory("history",function(){function History(){var tracks=[];this.getTracks=function(){return tracks},this.add=function(track){for(var i=0;i<tracks.length;i++)if(tracks[i].id===track.id){tracks.splice(i,1);break}tracks.push(track)},this.remove=function(index){tracks.splice(index,1)}}return new History}),angular.module("scvServices").factory("notifications",function(){function Notifications(){var messages=[];this.getMessages=function(){return messages},this.addMessage=function(message){messages.unshift(message)},this.deleteMessage=function(index){messages.splice(index,1)}}return new Notifications}),angular.module("playerServices").factory("playbackQueue",function(){function PlaybackQueue(){var tracks=[];this.getTracks=function(){return tracks},this.add=function(track){tracks.push(track)},this.remove=function(index){tracks.splice(index,1)}}return new PlaybackQueue}),angular.module("scvServices").factory("player",["notifications","soundcloudResolver","soundcloudId","history","playbackQueue",function(notifications,soundcloudResolver,soundcloudId,history,playbackQueue){function Player(){var self=this,currentTrack={};this.getHistory=function(){return history},this.getPlaybackQueue=function(){return playbackQueue},this.getCurrentTrack=function(){return currentTrack},this.next=function(){if(playbackQueue.getTracks().length>0){var nextTrack=playbackQueue.getTracks()[0];playbackQueue.remove(0),self.play(nextTrack)}},this.play=function(sound){currentTrack=sound,history.add(sound)},this.playTrack=function(trackUrl){soundcloudResolver.load(trackUrl,function(sound){if(-1===sound.uri.indexOf("/tracks")&&-1===sound.uri.indexOf("/playlists"))notifications.addMessage("Error: "+trackUrl+" is not a valid track.");else if(sound.uri.indexOf("/tracks")>=0)sound.stream_url+="?client_id="+soundcloudId,self.play(sound);else{for(var i=0;i<sound.tracks.length;i++)sound.tracks[i].stream_url+="?client_id="+soundcloudId,playbackQueue.add(sound.tracks[i]);self.next()}},function(error){notifications.addMessage("Error: "+error)})}}var player=new Player;return player}]),angular.module("scvServices").value("soundcloudId","4db236383438b2ebbe8e4f151e1c1b59"),angular.module("scvServices").factory("soundcloudResolver",["$http","soundcloudId",function($http,soundcloudId){const API_URL="https://api.soundcloud.com";return{load:function(url,successCallback,errorCallback){$http.get(API_URL+"/resolve",{params:{url:url,client_id:soundcloudId}}).success(function(sound){successCallback(sound)}).error(function(error){errorCallback("Could not load data for "+url)})}}}]);